import { Suspense } from "react";
import z from "zod";
import type { GenerateMetadataProps } from "@/lib";
import type { Metadata, ResolvingMetadata } from "next";
import { FillingComponent } from "@/components/filling-Component";
import { GlassLoadingScreen } from "@/components/glass-loading-screen";
import type { userSchema } from "@/lib/zod/user";

import { generateObject, generateText, tool } from "ai";
import { model } from "@/actions/user";

import { chromeai } from "chrome-ai";

export async function generateMetadata(
  { params, searchParams }: GenerateMetadataProps,
  parent: ResolvingMetadata
): Promise<Metadata> {
  // Read route params

  const id = params.id;

  const user = await fetch(`https://api.github.com/users/${id}`);
  const data: z.infer<typeof userSchema> = await user.json();
  const previousImages = (await parent).openGraph?.images || [];

  const { text } = await generateText({
    model: model("gemini-1.5-flash-latest"),
    prompt:
      "create an inspiring and very interesting sentence of 3 to 7 words about the content of this github user:" +
      Array.from([data]).map((item) => {
        console.log(item);
        return JSON.stringify(item);
      }),
  });

  const result = text as string;

  const ogImage = `/api/id?username=${JSON.stringify(
    data?.login
  )}&content=${JSON.stringify(result)}`;

  return {
    title: result,
    description:
      "Easily create a profile link generated by AI using your GitHub username. Share your personalized profile with others.",
    keywords: [
      "AI Profile",
      "GitHub Profile",
      "Profile Link",
      "our-git",
      "GitHub Username",
    ],
    authors: [{ name: "our-git", url: "https://our" }], // Replace with actual URL
    icons: {
      icon: "https://api.iconify.design/ph:github-logo-duotone.svg?color=%23770954",
      apple:
        "https://api.iconify.design/ph:github-logo-duotone.svg?color=%23770954",
    },
    openGraph: {
      username: `${data?.id}`,
      title: result,
      description:
        "our git is an application based on the github API that creates an evaluation for that user",
      images: [
        {
          url: ogImage,
          width: 1200 | 800 | 650,
          height: 630 | 450 | 300,
          alt: "Dynamic image about the user and the message this user represents evaluated by AI gemini 1.5 Pro",
        },
        `https://avatars.githubusercontent.com/u/${data?.id}?v=4`,
        ...previousImages,
      ],
    },
  };
}

export default function Page({
  params,
}: {
  params: {
    id: string;
  };
}) {
  return (
    <Suspense fallback={<GlassLoadingScreen />}>
      <FillingComponent params={params.id} />
    </Suspense>
  );
}
